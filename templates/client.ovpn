client

# OpenVPN traffic on 443/tcp is almost never blocked because, since OpenVPN
# uses SSL, it's very hard to distinguish this traffic from "real" HTTPS
# traffic.
#
# Try udp first but fall back to tcp when blocked.
{% for address in public_addresses %}
    remote {{address}} {{udp_port}} udp
    remote {{address}} {{tcp_port}} tcp
{% endfor %}


# If the server doesn't answer after 5 seconds, try the next server.
server-poll-timeout 5

# Compress packets with lzo. lz4 is more efficient, but it's not compatible
# with OpenVPN versions <2.4.
# Note: `comp-lzo` option is superseded by `compress lzo`, but the later is
# not yet supported by networkmanager. https://gitlab.gnome.org/GNOME/NetworkManager-openvpn/issues/1
#comp-lzo
# now compress is handled correctly. https://gitlab.gnome.org/GNOME/NetworkManager-openvpn/-/merge_requests/4
compress {{compress}}

# tun has lower traffic overhead than tap.
dev tun

# Allocate a dynamic port for returning packets.
nobind
# Make sure we're speaking to the server and not another client
# Trying to man-in-the-middle us.
remote-cert-tls server
# TLS versions <1.2 are vulnerable to many attacks.
tls-version-min 1.2
# Prefer the strong AES-256-GCM cipher. We can't use ncp-ciphers here because
# that is not supported by openvpn versions <2.4.
cipher AES-256-GCM
# Use SHA256 for auth since the default SHA1 is insecure. This setting will
# be ignored when GCM is used (which uses SHA384)
auth SHA256

verb 3
mute 20
mute-replay-warnings

# Certificate Authority cert
<ca>
{{ca -}}
</ca>
# Client cert
<cert>
{{cert -}}
</cert>
# Client private key
<key>
{{key -}}
</key>

# PSK and direction of TLS channel authentication
<tls-auth>
{{tls_auth -}}
</tls-auth>
key-direction 1
