name: easy-openvpn-server
title: Easy OpenVPN Server
version: "0.2"
summary: A dead-simple OpenVPN server.
description: | 
  A plug-and-play OpenVPN server that "Just Works" and has secure defaults.

  Install the snap, download the client config and connect!

  * Supports both IPv4 and IPv6 with secure encryption and DDoS protection.
  * Defaults to a fast udp connection. If that is blocked, clients will fall back to a more covert tcp connection that mimicks HTTPS.
  * Generates `.ovpn` client config files that work on Linux, Windows, Mac, Android and iOS.

  **Getting Started**

  1. Install the snap on the server.

    `sudo snap install easy-openvpn-server`

  2. Export the client config.

    `sudo easy-openvpn-server show-client default > default.ovpn`

  3. Import the `.ovpn` config file into the VPN application of your device and connect!

  By default, all the traffic of your device will go over the VPN.

  If you don't want this, run

  `sudo snap set easy-openvpn-server push-default-gateway=False`.

  **Changing the public address**

  The snap will do its best to figure out what the public address of the server is. However, when that fails, you can manually set the public address.

  `sudo snap set easy-openvpn-server public-address=example.com`

  **Managing clients**

  The snap automatically creates a client profile and config with the name `default`. However, it's recommended to create a separate client profile for each user. This way, you can revoke the client profile when that user does not need access to the VPN anymore.

  `sudo easy-openvpn-server add-client alice`

  `sudo easy-openvpn-server show-client alice > alice.ovpn`

  `sudo easy-openvpn-server remove-client alice`

  **Changing ports**

  By default the server runs on port 443/tcp (https) and 1194/udp (OpenVPN). If those ports are already used, you can change which ports the server runs on.

  `sudo snap set easy-openvpn-server udp-server.port=1234`

  `sudo snap set easy-openvpn-server tcp-server.port=80`

  **More options**

  You can specify additional search domains.

  `sudo snap set easy-openvpn-server additional-search-domains="test"`
  
  You can specify compression (disabled by default)
  
  `sudo snap set easy-openvpn-server compress="lzo"`

license: Apache-2.0

base: core20
grade: stable
confinement: strict

passthrough:
  system-usernames:
    snap_daemon: shared

apps:
  tcp-server:
    daemon: simple
    command: usr/sbin/openvpn --config $SNAP_USER_DATA/tcp-server.conf --cd $SNAP_USER_DATA
    command-chain:
      - bin/run.sh
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
    environment:
      LD_PRELOAD: "$SNAP/wraplib.so"
  udp-server:
    daemon: simple
    command: usr/sbin/openvpn --config $SNAP_USER_DATA/udp-server.conf --cd $SNAP_USER_DATA
    command-chain:
      - bin/run.sh
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
    environment:
      LD_PRELOAD: "$SNAP/wraplib.so"
  status:
    command: bin/status.sh
  openvpn:
    command: usr/sbin/openvpn --config $SNAP_USER_DATA/tcp-server.conf --cd $SNAP_USER_DATA
    command-chain:
      - bin/run.sh
    plugs:
      - network
      - network-bind
      - network-control
      - firewall-control
    environment:
      LD_PRELOAD: "$SNAP/wraplib.so"
  easy-openvpn-server:
    command: bin/setup.py
    plugs:
      - network
    environment:
      LC_ALL: C.UTF-8
      LANG: C.UTF-8

hooks:
  configure:
    plugs:
      - network
      - network-control
  connect-plug-network-control: {}
  connect-plug-firewall-control: {}


parts:
  openvpn:
    plugin: nil
    stage-packages:
      - openvpn
      - iptables
      - libatm1
  scripts:
    plugin: dump
    source: scripts
    organize:
      "*": bin/
  scripts-dependencies:
    plugin: python
    source: easy-openvpn-server
    requirements:
      - requirements.txt
    stage-packages:
      # Dependencies for `cryptography` on non-amd64 systems.
      - libffi7
      - libssl1.1
      - python3-cryptography
    build-packages:
      # Dependencies for building `cryptography` on non-amd64 systems.
      - build-essential
      - python-dev
      - libffi-dev
      - libssl-dev
  templates:
    plugin: dump
    source: templates
    organize:
      "*": templates/
  setgroups-patch:
    plugin: make
    source: setgroups-patch
    build-packages:
      - build-essential
